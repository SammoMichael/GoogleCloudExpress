/* <span class="token keyword">function</span><span class="token function">binarySearch</span><span class="token punctuation">(</span><span class="token parameter">ar<span class="token punctuation">, </span> el<span class="token punctuation">, </span> compare_fn</span><span class="token punctuation">)</span><span class="token punctuation"> {
  </span><span class="token keyword">var</span>m <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;
  </span><span class="token keyword">var</span>n <span class="token operator">=</span>ar<span class="token punctuation">.</span>length <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;
  </span><span class="token keyword">while</span><span class="token punctuation">(</span>m <span class="token operator">&lt;

  =</span> n<span class="token punctuation">)</span><span class="token punctuation"> {
    </span><span class="token keyword">var</span>k <span class="token operator">=</span><span class="token punctuation">(</span>n <span class="token operator">+</span> m<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span><span class="token punctuation">;
    </span><span class="token keyword">var</span>cmp <span class="token operator">=</span><span class="token function">compare_fn</span><span class="token punctuation">(</span>el<span class="token punctuation">, </span> ar<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;

    </span><span class="token keyword">if</span><span class="token punctuation">(</span>cmp <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation"> {
      </span>m <span class="token operator">=</span>k <span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;
      </span><span class="token punctuation">
    }

    </span><span class="token keyword">else</span><span class="token keyword">if</span><span class="token punctuation">(</span>cmp <span class="token operator">&lt;

    </span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation"> {
      </span>n <span class="token operator">=</span>k <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;
      </span><span class="token punctuation">
    }

    </span><span class="token keyword">else</span><span class="token punctuation"> {
      </span><span class="token keyword">return</span>k<span class="token punctuation">;
      </span><span class="token punctuation">
    }

    </span><span class="token punctuation">
  }

  </span><span class="token keyword">return</span><span class="token operator">-</span>m <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;
  </span><span class="token punctuation">
}

</span><span class="token keyword">function</span><span class="token function">compare_number</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">, </span> b</span><span class="token punctuation">)</span><span class="token punctuation"> {
  </span><span class="token keyword">return</span>a <span class="token operator">-</span>b<span class="token punctuation">;
  </span><span class="token punctuation">
} */

/* </span> */
.app-name {
  color: #045de9;
}
a {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

  text-decoration: none;
}
.choose {
  color: rgb(231, 87, 87);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  font-size: 30px;
}
.python {
  border-radius: 10px;
  width: 1100px;
  height: 120px;
  margin: 25px 0px;
  background-color: #2a2a72;
  background-image: linear-gradient(315deg, #2a2a72 0%, #009ffd 74%);
}
.python-link {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color: white;
  font-size: 50px;
}
.js-link {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;

  color: white;
  font-size: 50px;
}
.ruby-link {
  color: white;
  font-size: 50px;
}
.javascript {
  border-radius: 10px;
  width: 1100px;
  height: 120px;
  margin: 25px 0px;
  background-color: #fbb034;
  background-image: linear-gradient(315deg, #fbb034 0%, #ffdd00 74%);
}
.ruby {
  border-radius: 10px;
  width: 1100px;
  height: 120px;
  margin: 25px 0px;
  background-color: #3f0d12;
  background-image: linear-gradient(315deg, #3f0d12 0%, #a71d31 74%);
}
html, body {
  height: 100vh;
  width: 100vw;
}

.language {
  display: flex;
  flex: 1;
  flex-direction: column;
  align-items: center;
}
.speed {
  min-width: 50px;
  min-height: 50px;
  /* margin: 50px; */
  font-family: "Roboto";
  font-size: 70px;
  border-bottom: 10px solid aqua;
  text-decoration: none;
}

.feedback{
  display: flex;
  flex: 1;
  flex-direction: column-reverse;
  color: white;
  background-color: #2d3436;
  background-image: linear-gradient(315deg, #2d3436 0%, #000000 74%);
  background-color: #166d3b;
  background-image: linear-gradient(147deg, #166d3b 0%, #000000 74%);
}
.errors{ 
  position: absolute;
  right: 50px;
  font-size: 30px;
  margin-top: 10px;
}
.timer-box {
  margin-top: 40px;
  position: sticky;
  align-items: center;
  display: flex;
  flex-direction: column;
  justify-content: center;
}
.timer {
  font-size: 30px;
  position: absolute;
  height: 40px;
  width: 80px;
  padding: 10px;
  border-radius: 20px;
  background-color: red;
  color: white;
}
.text {
  font-family: 'Inconsolata', monospace;
  color: white;
  
  margin-left: 20px;
  margin-bottom: 50px;
  letter-spacing: 3px;
  overflow: scroll;
  /* margin: 50px; */
  display: flex;

  height: 100vh;
  /* width: 100vw; */
  /* margin: 500px; */
  font-size: 25px;
   white-space: pre-wrap;
   text-align: left;

}
.parameter {
  color: pink;
}
.highlight {
  font-size: 30px;
  background-color:rgb(40, 50, 180);
  opacity: 1;
  border: rgb(40, 50, 180) solid 5px;
}
.error {
  font-size: 30px;
  background-color: red;
  opacity: 1;
  border:red solid 5px;
}

.App {
  display: flex;    
  flex-direction: column;
  background-color: #2d3436;
  background-image: linear-gradient(315deg, #2d3436 0%, #000000 74%);
  text-align: center;
  height: 100vh;
  width: 100vw;
  color: white;
}

.App-logo {
  animation: App-logo-spin infinite 20s linear;
  height: 40vmin;
  pointer-events: none;
}
.punctuation {
  color: green;
}

.operator {
  color: purple;
}
.keyword {
  color: red;
}

.function {
  color: orange;
}
.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
